<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>Git Tags</name>
  <description />
  <settings>
    <parameters>
      <param name="env.CURRENT_VERSION" value="0.0.0" />
      <param name="env.GITHUB_TOKEN" value="credentialsJSON:643c4fa5-223a-4e42-a7dd-2dfbbd35c3a7" spec="password" />
      <param name="env.NEXT_VERSION" value="0.0.0" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_1" name="Read current version" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[CURRENT_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g')
echo "##teamcity[setParameter name='env.CURRENT_VERSION' value='$CURRENT_VERSION']"]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="Calculate next version" type="kotlinScript">
        <parameters>
          <param name="kotlinArgs" value="%env.CURRENT_VERSION%" />
          <param name="kotlinPath" value="%teamcity.tool.kotlin.compiler.DEFAULT%" />
          <param name="scriptContent"><![CDATA[#!/usr/bin/env kotlin

import java.util.TimeZone;
import java.util.Date;
import java.util.Locale;
import java.util.Calendar;
                
fun getVersionPrefix(): String {
    val cal = Calendar.getInstance(TimeZone.getTimeZone("Europe/Stockholm"))
    cal.setTime(Date())
    val year = cal.get(Calendar.YEAR)
    val week = cal.get(Calendar.WEEK_OF_YEAR)
    return "$year.$week"
}

val currentVersion = args[0]
val nextVersionPrefix = getVersionPrefix()
if (currentVersion.startsWith(nextVersionPrefix)) {
    val currentBuildNo = currentVersion.replace("$nextVersionPrefix.", "").toIntOrNull() ?: 0
    val nextBuildNo = currentBuildNo + 1
    print("##teamcity[setParameter name='env.NEXT_VERSION' value='$nextVersionPrefix.$nextBuildNo']")
} else {
    print("##teamcity[setParameter name='env.NEXT_VERSION' value='$nextVersionPrefix.0']")
}]]></param>
          <param name="scriptType" value="customScript" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_3" name="Update version" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[echo "Current version is %env.CURRENT_VERSION%"
echo "Next version is %env.NEXT_VERSION%"
npm version %env.NEXT_VERSION% -m "[skip ci] Bump version to %env.NEXT_VERSION%"]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="TeamcityTest_HttpsGithubComThusitha458teamcityTestGitRefsHeadsMain" />
    </vcs-settings>
    <requirements />
    <build-triggers>
      <build-trigger id="TRIGGER_1" type="vcsTrigger">
        <parameters>
          <param name="branchFilter" value="+:*" />
          <param name="enableQueueOptimization" value="true" />
          <param name="quietPeriodMode" value="DO_NOT_USE" />
          <param name="triggerRules"><![CDATA[-:comment=[skip ci]:**
+:**]]></param>
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="BUILD_EXT_1" type="perfmon">
        <parameters>
          <param name="teamcity.perfmon.feature.enabled" value="true" />
        </parameters>
      </extension>
    </build-extensions>
    <cleanup />
  </settings>
</build-type>

